server:
  port: ${GATEWAY_PORT_DEV}
  forward-headers-strategy: FRAMEWORK

spring:
  application:
    name: api-gateway
  config:
    import: optional:configserver:${CONFIG_SERVER_URI_DEV}
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI_DEV}
      fail-fast: true
      label: main
    gateway:
      server:
        webflux:
          enabled: true
          trusted-proxiess: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      x-forwarded:
        enabled: true
        host-enabled: true
        port-enabled: true
        for-enabled: true
        proto-enabled: true
        prefix-enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS"
            allowedHeaders: "*"
      httpclient:
        connect-timeout: 5000
        response-timeout: 10s
        ssl:
          use-insecure-trust-manager: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - TokenRelay=
        - SaveSession
      loadbalancer:
        cache:
          caffeine:
          spec: maximumSize=500,expireAfterAccess=600s
  security:
    oauth2:
       #resourceserver:
        #jwt:
          #issuer-uri: ${SPI_URI_SERVER_DEV}
       client:
        registration:
          keycloak:
            client-id: ${SPI_API_GATEWAY_CLIENT_ID}
            client-secret: ${SPI_API_GATEWAY_CLIENT_SECRET_DEV}
            authorization-grant-type: authorization_code
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            issuer-uri: ${SPI_URI_SERVER_DEV}
            user-name-attribute: preferred_username
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${SPRING_CLOUD_EUREKA_HOST_DEV}:${SPRING_CLOUD_EUREKA_PORT_DEV}${SPRING_CLOUD_EUREKA_PATH_DEV}

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: b3
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL_DEV}
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    refresh:
      access: unrestricted
  metrics:
    tags:
      application: api-gateway

# logging:
#   level:
#     '[org.springframework.cloud.config]': DEBUG
#     '[org.springframework.boot.context.config]': DEBUG
#     '[org.springframework.cloud.gateway]': TRACE
#     '[org.springframework.http.server.reactive]': DEBUG
#     '[org.springframework.web.reactive]': DEBUG
#     '[org.springframework.boot.autoconfigure.web]': DEBUG
#     '[org.springframework.boot.context.logging]': TRACE
#     '[redisratelimiter]': DEBUG
#     '[reactor.ipc.netty]': DEBUG
#     '[reactor.netty]': DEBUG
#     '[reactor.netty.http.client]': DEBUG
#     '[org.springframework.security]': DEBUG
#     '[org.springframework.security.oauth2]': DEBUG
#     '[org.springframework.web.reactive.function.client]': TRACE
#     '[org.springframework.jdbc.core.JdbcTemplate]': DEBUG
